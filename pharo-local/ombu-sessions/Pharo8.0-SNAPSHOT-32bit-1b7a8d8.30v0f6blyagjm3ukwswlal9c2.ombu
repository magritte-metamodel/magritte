OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2020-08-25T17:55:36.467758+02:00' ],		#prior : OmReference [ 'Pharo8.0-SNAPSHOT-32bit-1b7a8d8.8jjpzjtlgt2k2jaeytlxu25do', '8324' ],		#self : OmReference [ '1' ]	},	#content : EpSessionSnapshot {		#imageName : '/Users/norbert/work/projects/magritte/magritte.image'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2020-08-25T17:56:07.385627+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'BaselineOfMagritte-CompatibleUserName.1598370756'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ],		#time : DateAndTime [ '2020-08-25T17:56:07.408352+02:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #BaselineOfMagritte,		#affectedPackageName : #BaselineOfMagritte	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ],		#time : DateAndTime [ '2020-08-25T17:56:07.409675+02:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'BaselineOf',				#definitionSource : 'BaselineOf subclass: #BaselineOfMagritte\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'BaselineOfMagritte\''			},			#name : #BaselineOfMagritte,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'BaselineOfMagritte class\r\tinstanceVariableNames: \'\''				},				#name : #'BaselineOfMagritte class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #BaselineOfMagritte,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #BaselineOfMagritte,			#package : #BaselineOfMagritte,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ],		#time : DateAndTime [ '2020-08-25T17:56:07.431784+02:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfMagritte,				#isMetaSide : false			},			#name : #'baseline300ForGemStone:',			#protocol : #baselines,			#sourceCode : 'baseline300ForGemStone: spec\r\tspec\r\t\tfor: #gemstone\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\tproject: \'GsCore\'\r\t\t\t\twith: [ \r\t\t\t\t\tspec\r\t\t\t\t\t\tclassName: \'ConfigurationOfGsCore\';\r\t\t\t\t\t\tversionString: #bleedingEdge;\r\t\t\t\t\t\trepository: \'http://seaside.gemstone.com/ss/MetacelloRepository\' ].\r\t\t\tspec\r\t\t\t\tpackage: \'Magritte-Model\'\r\t\t\t\t\twith: [ \r\t\t\t\t\t\t\tspec\r\t\t\t\t\t\t\t\trequires: #(\'GsCore\');\r\t\t\t\t\t\t\t\tincludes: #(\'Magritte-GemStone-Model\') ];\r\t\t\t\tpackage: \'Magritte-Tests-Model\' with: [ spec includes: #(\'Magritte-Tests-GemStone-Model\') ];\r\t\t\t\tpackage: \'Magritte-Seaside\' with: [ spec includes: #(\'Magritte-GemStone-Seaside\') ];\r\t\t\t\tpackage: \'Magritte-GemStone-Model\' with: [ spec requires: #(\'Magritte-Model\') ];\r\t\t\t\tpackage: \'Magritte-Tests-GemStone-Model\' with: [ spec requires: #(\'Magritte-GemStone-Model\') ];\r\t\t\t\tpackage: \'Magritte-GemStone-Seaside\' with: [ spec requires: #(\'Magritte-Seaside\') ] ]',			#stamp : '',			#package : #BaselineOfMagritte		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ],		#time : DateAndTime [ '2020-08-25T17:56:07.432311+02:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfMagritte,				#isMetaSide : false			},			#name : #'baseline310CommonExtDeps:',			#protocol : #baselines,			#sourceCode : 'baseline310CommonExtDeps: spec\r\t"Common external dependencies for baseline 3.1.0"\r\r\tspec\r\t\tbaseline: \'Grease\' with: [ spec repository: \'github://SeasideSt/Grease:v1.5.x/repository\' ];\r\t\tbaseline: \'Seaside3\'\r\t\t\twith: [ "note: we do not want to depend on Zinc, since this is not present in Squeak. Currently no adapter is loaded"\r\t\t\tspec\r\t\t\t\trepository: \'github://SeasideSt/Seaside:master/repository\';\r\t\t\t\tloads: #(\'Core\') ]\r',			#stamp : '',			#package : #BaselineOfMagritte		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ],		#time : DateAndTime [ '2020-08-25T17:56:07.432731+02:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfMagritte,				#isMetaSide : false			},			#name : #'baseline330:',			#protocol : #baselines,			#sourceCode : 'baseline330: spec\r\t<baseline>\r\tspec\r\t\tfor: #common\r\t\tdo: [ \r\t\t\tspec author: \'SeanDeNigris\'.\r\t\t\tspec timestamp: \'2015-04-05\'.\r\t\t\tspec description: \'For pharo4.x, add Magritte-GT package and add it to the default group\'.\r\t\t\tself baseline310CommonExtDeps: spec.\r\t\t\tspec\r\t\t\t\tpackage: \'Magritte-Model\' with: [ \r\t\t\t\t\tspec \r\t\t\t\t\t\trequires: #(\'Grease\');\r\t\t\t\t\t\tincludes: #(\'Magritte-Deprecated3dot7\') ];\r\t\t\t\tpackage: \'Magritte-Deprecated3dot7\' with: [ spec requires: #(\'Magritte-Model\') ];\r\t\t\t\tpackage: \'Magritte-Tests-Model\' with: [ spec requires: #(\'Magritte-Model\') ];\r\t\t\t\tpackage: \'Magritte-Seaside\' with: [ spec requires: #(\'Magritte-Model\' \'Seaside3\') ];\r\t\t\t\tpackage: \'Magritte-Bootstrap\' with: [ spec requires: #(\'Magritte-Model\') ];\r\t\t\t\tpackage: \'Magritte-Deprecated\' with: [ spec requires: #(\'Magritte-Model\') ];\r\t\t\t\tpackage: \'Magritte-Merging\' with: [ spec requires: #(\'Magritte-Model\') ].\r\t\t\tspec\r\t\t\t\tgroup: \'Core\' with: #(\'Magritte-Model\');\r\t\t\t\tgroup: \'Tests\' with: #(\'Magritte-Tests-Model\');\r\t\t\t\tgroup: \'Seaside\' with: #(\'Magritte-Seaside\');\r\t\t\t\tgroup: \'Deprecated\' with: #(\'Magritte-Deprecated\') ].\r\tself baseline330ForPharo: spec.\r\tself baseline300ForGemStone: spec',			#stamp : '',			#package : #BaselineOfMagritte		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ],		#time : DateAndTime [ '2020-08-25T17:56:07.433086+02:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfMagritte,				#isMetaSide : false			},			#name : #'baseline330ForPharo:',			#protocol : #baselines,			#sourceCode : 'baseline330ForPharo: spec\r\tspec\r\t\tfor: #\'pharo1.x\'\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\tproject: \'FileSystem\' with: [ \r\t\t\t\t\tspec\r\t\t\t\t\t\tclassName: \'ConfigurationOfFilesystem\';\r\t\t\t\t\t\tversionString: #\'stable\';\r\t\t\t\t\t\tloads: #( \'default\' );\r\t\t\t\t\t\trepository: \'http://www.squeaksource.com/MetacelloRepository\' ].\r\t\t\tspec\r\t\t\t\tpackage: \'Magritte-Model\' with: [ spec requires: #( \'FileSystem\' ) ] ].\r\tspec\r\t\tfor: #(#\'pharo1.x\' #\'pharo2.x\' #\'squeak\')\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\tpackage: \'Magritte-Model\' with: [ spec includes: #(\'Magritte-Pharo-Model\') ];\r\t\t\t\tpackage: \'Magritte-Tests-Pharo-Model\' with: [ spec requires: #(\'Magritte-Pharo-Model\') ];\r\t\t\t\tpackage: \'Magritte-Pharo-Model\' with: [ spec requires: #(\'Magritte-Model\') ]].\r\tspec\r\t\tfor: #(#\'pharo3.x\' #\'pharo4.x\' #\'pharo5.x\' #\'pharo6.x\')\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\tpackage: \'Magritte-Pharo3-Model\' with: [ spec requires: #(\'Magritte-Model\') ];\r\t\t\t\tpackage: \'Magritte-Tests-Pharo-Model\' with: [ spec requires: #(\'Magritte-Pharo3-Model\') ];\r\t\t\t\tpackage: \'Magritte-Model\' with: [ spec includes: #(\'Magritte-Pharo3-Model\') ];\r\t\t\t\t" create a temporary alias "\r\t\t\t\tpackage: \'Magritte-Pharo-Model\' with: \'Magritte-Pharo3-Model\'].\r\tspec\r\t\tfor: #(#\'pharo7.x\' #\'pharo8.x\' #\'pharo9.x\')\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\tpackage: \'Magritte-Pharo7-Model\' with: [ spec requires: #(\'Magritte-Model\') ];\r\t\t\t\tpackage: \'Magritte-Tests-Pharo-Model\' with: [ spec requires: #(\'Magritte-Pharo7-Model\') ];\r\t\t\t\tpackage: \'Magritte-Model\' with: [ spec includes: #(\'Magritte-Pharo7-Model\') ];\r\t\t\t\t" create a temporary alias "\r\t\t\t\tpackage: \'Magritte-Pharo-Model\' with: \'Magritte-Pharo7-Model\'].\r\r\tspec\r\t\tfor: #(#\'pharo4.x\')\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\tproject: \'MagritteGlamourForPharo40\' with: [ \r\t\t\t\t\tspec\r\t\t\t\t\t\tclassName: \'ConfigurationOfMagritteGlamourForPharo40\';\r\t\t\t\t\t\tversionString: #\'stable\';\r\t\t\t\t\t\trepository: \'http://www.smalltalkhub.com/mc/SeanDeNigris/SeansMetaRepo/main\' ].\r\t\t\tspec package: \'Magritte-GT\' with: [ spec requires: #(\'Morphic\' \'MagritteGlamourForPharo40\') ].\r\t\t\tspec package: \'Magritte-Morph\' with: [ spec includes: #(\'Magritte-GT\') ].\r\t\t\tspec group: \'default\' with: #(\'Magritte-GT\') ].\r\tspec\r\t\tfor: #(#\'pharo5.x\' #\'pharo6.x\' #\'pharo7.x\' #\'pharo8.x\' #\'pharo9.x\')\r\t\tdo: [ \r\t\t\t"spec\r\t\t\t\tbaseline: \'PharoEnhancements\' with: [\r\t\t\t\t\tspec repository: \'github://seandenigris/Pharo-Enhancements\' ]."\r\t\t\tspec \r\t\t\t\tpackage: \'Magritte-Glamour\';\r\t\t\t\tpackage: \'Magritte-GT\' with: [ spec requires: #(\'Morphic\' \'Magritte-Glamour\') ];\r\t\t\t\tpackage: \'Magritte-Developer\' with: [ "spec requires: #(\'PharoEnhancements\')" ].\r\t\t\tspec group: \'default\' with: #(\'Magritte-GT\' \'Magritte-Developer\') ].\r\tspec\r\t\tfor: #squeakCommon\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\tpackage: \'Magritte-Tests-Model\' with: [ spec includes: #(\'Magritte-Tests-Pharo-Model\') ];\r\t\t\t\tpackage: \'Magritte-Seaside\' with: [ spec includes: #(\'Magritte-Pharo-Seaside\') ];\t\t\t\t\r\t\t\t\tpackage: \'Magritte-Pharo-Seaside\' with: [ spec requires: #(\'Magritte-Seaside\') ];\r\t\t\t\tpackage: \'Magritte-Morph\' with: [ spec requires: #(\'Magritte-Model\') ];\r\t\t\t\tpackage: \'Magritte-Pharo-Tools\' with: [ spec requires: #(\'Magritte-Deprecated\') ].\r\t\t\tspec\r\t\t\t\tgroup: \'Tools\' with: #(\'Magritte-Pharo-Tools\');\r\t\t\t\tgroup: \'Morphic\' with: #(\'Magritte-Morph\');\r\t\t\t\tgroup: \'default\' with: \'Morphic\' ]',			#stamp : '',			#package : #BaselineOfMagritte		}	}}